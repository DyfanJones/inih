// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

#ifdef RCPP_USE_GLOBAL_ROSTREAM
Rcpp::Rostream<true>&  Rcpp::Rcout = Rcpp::Rcpp_cout_get();
Rcpp::Rostream<false>& Rcpp::Rcerr = Rcpp::Rcpp_cerr_get();
#endif

// write_ini
void write_ini(Rcpp::List config_list, std::string filename);
RcppExport SEXP _inih_write_ini(SEXP config_listSEXP, SEXP filenameSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Rcpp::List >::type config_list(config_listSEXP);
    Rcpp::traits::input_parameter< std::string >::type filename(filenameSEXP);
    write_ini(config_list, filename);
    return R_NilValue;
END_RCPP
}
// read_ini
Rcpp::List read_ini(std::string filename);
RcppExport SEXP _inih_read_ini(SEXP filenameSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< std::string >::type filename(filenameSEXP);
    rcpp_result_gen = Rcpp::wrap(read_ini(filename));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_inih_write_ini", (DL_FUNC) &_inih_write_ini, 2},
    {"_inih_read_ini", (DL_FUNC) &_inih_read_ini, 1},
    {NULL, NULL, 0}
};

RcppExport void R_init_inih(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
